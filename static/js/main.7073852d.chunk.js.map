{"version":3,"sources":["portfolio.js","Container/Header/index.js","Container/LandingPage/index.js","Container/AboutMe/index.js","Container/OpenSourceProjects/index.js","Container/Projects/index.js","Container/Blogs/index.js","Container/Experience/index.js","Container/Contact/index.js","Container/Footer/index.js","Container/index.js","App.js","serviceWorker.js","index.js","assets/images/hasnatAmir.JPG","assets/images/home_create.png","assets/images/Ivestogenie-GIF-final.gif"],"names":["Greeting","userName","title","emoji","subTitle","resumeLink","socialLink","icon","link","tooltip","bgColor","aboutMe","name","image","require","desc","skillSet","programmingLang","color","Tools","projects","subtitle","tools","blogs","experience","company","time","achievment","catagory","contact","message","msg","openSource","githubToken","process","REACT_APP_GITHUB_TOKEN","githubUserName","show","useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","fullScreenMenu","border","borderRadius","left","top","zIndex","position","itemAlign","justifyContent","padding","backgroundColor","transition","boxShadow","menuButtonIcon","fontSize","toolbar","mixins","drawerPaper","content","flexGrow","textDecoration","borderLeft","siteTitle","fontWeight","textAlign","drawerDesc","marginBottom","resume","marginTop","postion","transform","Header","props","classes","React","useState","open","setOpen","handleDrawerOpen","handleDrawerClose","event","type","key","list","className","clsx","role","onClick","onKeyDown","href","portfolio","style","Divider","List","logo","filter","Boolean","map","text","index","ListItem","button","ListItemIcon","ListItemText","primary","Button","variant","target","Fragment","Tooltip","arrow","placement","SwipeableDrawer","onClose","draer","moreInfo","bottom","down","moreInfoIcon","LandingPage","Grid","container","direction","justify","alignItems","social","items","md","minHeight","paddingTop","paddingBottom","pageTitle","pageHeading","card","maxWidth","margin","heading","skillCard","skillCardHeader","skill","skillIcon","skillTitle","About","id","sm","Card","CardMedia","component","alt","CardContent","CardActions","CardHeader","lang","tool","openSourceCS","repo","repoTitle","repoDesc","repoStats","languageColor","height","fork","moreProject","OpenSource","setrepo","useEffect","ApolloClient","uri","request","operation","setContext","headers","authorization","query","gql","then","result","setrepoFunction","data","user","pinnedItems","edges","catch","error","console","log","array","String","size","rep","node","CardActionArea","url","avatar","description","primaryLanguage","forkCount","stargazers","totalCount","diskUsage","cardMedia","chip","cardTitle","cardDesc","Projects","project","Chip","label","blogPost","blogTitle","blogSummary","linkIcon","Blogs","blog","timeLine","timeLineElement","elementTitle","elementCompany","elementContent","Experience","step","date","contentStyle","iconStyle","background","contactContainer","contactCard","Contact","Footer","Main","App","library","add","fab","fas","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.7073852d.chunk.js","sourcesContent":["\n/* Change this file to get your personal Portfolio */\n\n// Your Summary And Greeting Section\n\nimport emoji from \"react-easy-emoji\";\n \nconst Greeting = {\n    userName: 'Hasnat Amir',\n    title: emoji('Hasnat Amir 💻'),\n    subTitle: 'JavaScript Developer | MERN Stack',\n    resumeLink: 'https://drive.google.com/file/d/1mCzbiCb007_q9CVNEbh1ClC2YR1Kk_bU/view?usp=sharing',\n    socialLink:[\n        {\n            icon: ['fab', 'twitter'],\n            link: 'https://twitter.com/HasnatAmir2',\n            tooltip: 'Twitter',\n            bgColor: '#00acee',\n        },\n        {\n            icon: ['fab', 'github'],\n            link: 'https://github.com/hasnatamir2',\n            tooltip: 'Github',\n            bgColor: '#211F1F',\n        },\n        {\n            icon: ['fab', 'linkedin-in'],\n            link: 'https://www.linkedin.com/in/hasnatamir2/',\n            tooltip: 'LinkedIn',\n            bgColor: '#0e76a8',\n        },\n    ]\n}\n//  If you want to use Emoji in your content use emoji() like I used on line 10 other wise it will generate warnings\n\nconst socialLink = [\n    // formate for icon: [ 'fontAwesome icon class', fontAwesome icon name]\n    // keep in mind only Solid (fas) and Brand (fab) type of icons are installed and valid for this site\n    \n    {\n        icon: ['fab', 'facebook-f'],\n        link: 'https://web.facebook.com/Mhasnatamir/',\n        tooltip: 'Facebook',\n        bgColor: '#3b5998',\n    },\n    {\n        icon: ['fab', 'twitter'],\n        link: 'https://twitter.com/HasnatAmir2',\n        tooltip: 'Twitter',\n        bgColor: '#00acee',\n    },\n    {\n        icon: ['fab', 'instagram'],\n        link: 'https://www.instagram.com/hasnatamir2/',\n        tooltip: 'Instagram',\n        bgColor: '#3f729b',\n    },\n    {\n        icon: ['fab', 'github'],\n        link: 'https://github.com/hasnatamir2',\n        tooltip: 'Github',\n        bgColor: '#211F1F',\n    },\n    {\n        icon: ['fab', 'linkedin-in'],\n        link: 'https://www.linkedin.com/in/hasnatamir2/',\n        tooltip: 'LinkedIn',\n        bgColor: '#0e76a8',\n    },\n    {\n        icon: ['fab', 'google'],\n        link: 'mailto:hasnatamir2@gmail.com',\n        tooltip: 'Google',\n        bgColor: '#FFA500',\n    },\n    \n]\n\nconst aboutMe = {\n    name: 'Hasnat Amir',\n    image: require(\"./assets/images/hasnatAmir.JPG\"),\n    desc: 'I am a JavaScript developer & a fresh graduate from NUST, Pakistan. My works includes developing ECommerce as well as FinTech Technologies & sometimes other cool stuff. My approach towards for my work is always minimalist and yet with coolest features and functionalities. Let’s make the best of it!',\n    resumeLink: 'https://drive.google.com/file/d/1mCzbiCb007_q9CVNEbh1ClC2YR1Kk_bU/view?usp=sharing',\n}\n\nconst skillSet = {\n    programmingLang:[\n        {\n            name: 'JavaScript',\n            icon: ['fab', 'js'],\n            color: ''\n        },\n        {\n            name: 'dart',\n            icon: ['fas', 'terminal'],\n            color: ''\n        },\n        {\n            name: 'sass',\n            icon: ['fab', 'sass'],\n            color: ''\n        },\n        {\n            name: 'python',\n            icon: ['fab', 'python'],\n            color: ''\n        },\n        {\n            name: 'c/c++',\n            icon: ['fab', 'cuttlefish'],\n            color: ''\n        },\n        {\n            name: 'java',\n            icon: ['fab', 'java'],\n            color: ''\n        },\n    ],\n    Tools:[\n        {\n            name: 'React.js',\n            icon: ['fab', 'react'],\n            color: ''\n        },\n        {\n            name: 'Node.js',\n            icon: ['fab', 'node-js'],\n            color: ''\n        },\n        {\n            name: 'NPM',\n            icon: ['fab', 'npm'],\n            color: ''\n        },\n        {\n            name: 'React Native',\n            icon: ['fab', 'react'],\n            color: ''\n        },\n        {\n            name: 'Flutter',\n            icon: ['fas', 'terminal'],\n            color: ''\n        },\n        {\n            name: 'MongoDB',\n            icon: ['fas', 'database'],\n            color: ''\n        },\n        {\n            name: 'Docker',\n            icon: ['fab', 'docker'],\n            color: ''\n        },\n        {\n            name: 'AWS',\n            icon: ['fab', 'aws'],\n            color: ''\n        },\n        {\n            name: 'MySQL Database',\n            icon: ['fas', 'database'],\n            color: ''\n        },\n        {\n            name: 'Firebase',\n            icon: ['fas', 'fire'],\n            color: ''\n        },\n        {\n            name: 'Socket.io',\n            icon: ['fas', 'bolt'],\n            color: ''\n        },\n        {\n            name: 'Stripe',\n            icon: ['fab', 'stripe'],\n            color: ''\n        },\n    ],\n}\n\nconst projects = {\n    title: 'Big Projects',\n    subtitle: 'Go & Check it!!',\n    projects: [\n        {\n            title: 'Create.',\n            desc: 'Create your own gift card, weeding cards, etc online and purchase',\n            image: require(\"./assets/images/home_create.png\"),\n            tools: [\n                'React.js',\n                'Redux',\n                'Node.js',\n                'MongoDB',\n                'ExpressJs',\n            ],\n            link: '/'\n        },\n        {\n            title: 'Investogenie',\n            desc: 'Portal for capital market investors',\n            image: require(\"./assets/images/Ivestogenie-GIF-final.gif\"),\n            tools: [\n                'React.js',\n                'ReduxJs',\n                'Material-UI',\n                'Node.js',\n                'Stripe',\n                'MongoDB',\n                'ExpressJs',\n            ],\n            link: 'https://investogenie.com/'\n        }\n    ]\n}\n\nconst blogs = {\n    \n}\n\nconst experience = {\n    title: 'Experience & Education',\n    subtitle: 'Have a better idea of me',\n    experience: [\n        {\n            title: 'MERN Stack developer',\n            company: 'CarbonTeq',\n            time: 'Jul 2021 - Present',\n            achievment: 'REST api, Integration, Node.js, JWT, Express.js, mongoDB',\n            catagory: 'work',\n        },\n        {\n            title: 'Junior Software Engineer',\n            company: 'AppRocket',\n            time: 'Jan 2021 - Jul 2021',\n            achievment: 'React App development, Redux integration, REST api, 3rd party API integrations, Node.js, JWT, Express.js, mongoDBB',\n            catagory: 'work',\n        },\n        {\n            title: 'Freelace Web developer',\n            company: 'Fiver',\n            time: 'Aug 2019 - Dec 2020',\n            achievment: 'REST api, Integration, Node.js, JWT, Express.js, mongoDB',\n            catagory: 'work',\n        },\n        {\n            title: 'Backend Web Developer',\n            company: 'snapthat',\n            time: 'Jun 2019 - Aug 2019',\n            achievment: 'REST api, Integration, Node.js, JWT, Express.js, mongoDB',\n            catagory: 'work',\n        },\n        {\n            title: 'Graphics Designer',\n            company: 'Edwiz',\n            time: 'Jun 2019 - Aug 2019',\n            achievment: 'vector Art, canvas designing, Adobe Illustrator, Adobe Photoshop, Adobe InDesign,pitch presentation design,',\n            catagory: 'work',\n        },\n        {\n            title: 'Student',\n            company: 'National University of Science & Technology, Isb, Pakistan',\n            time: 'Sep 2017 - Jun 2021',\n            achievment: 'Becholer in Computer Science',\n            catagory: 'education',\n        },\n    ]\n}\n\nconst contact = {\n    title: 'Contact',\n    subtitle: 'DISCUSS A PROJECT OR JUST WANT TO SAY HI? MY INBOX IS OPEN FOR ALL.',\n    message: [\n        {\n            icon: ['fas', 'map-marker-alt'],\n            msg: 'Lahore, Pakistan'\n        },\n        {\n            icon: ['fas', 'handshake'],\n            msg: 'Looking For Opportunities'\n        }\n    ]\n}\n\nconst openSource = {\n    githubToken: process.env.REACT_APP_GITHUB_TOKEN,\n    githubUserName: \"hasnatamir2\", // Change to your github username to view your profile in Contact Section.\n    show :\"true\" // Set true or false to show Contact profile using Github, defaults to false\n};\n\n\nexport {\n    Greeting,\n    socialLink,\n    aboutMe,\n    skillSet,\n    projects,\n    blogs,\n    experience,\n    contact,\n    openSource,\n}","import React from 'react'\n// import './Header.css'\nimport {\n    Button,\n    SwipeableDrawer,\n    Divider,\n    List, \n    ListItem,\n    ListItemText,\n    ListItemIcon,\n    Tooltip,\n} from '@material-ui/core';\n\nimport * as portfolio from '../../portfolio'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx'\n\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n    },\n    drawer: {\n      [theme.breakpoints.up('sm')]: {\n        width: drawerWidth,\n        flexShrink: 0,\n      },\n    },\n    appBar: {\n      [theme.breakpoints.up('sm')]: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n      },\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n      [theme.breakpoints.up('sm')]: {\n        display: 'none',\n      },\n    },\n    fullScreenMenu: {\n        // width: '5%',\n        // height: '10%',\n        border: '1px solid #eee',\n        borderRadius: \"5px\",\n        // boxShadow: '0px 0px 2px 3px #eee',\n        left: '2.5%',\n        top: '5%',\n        zIndex: '100',\n        position: 'fixed',\n        itemAlign: 'center',\n        justifyContent: 'center',\n        color: '#eee',\n        padding: '12px',\n        display: 'inline-block',\n        backgroundColor: ' #e27d60',\n        /* width: 100px;\n        height: 100px; */\n        transition: '0.2s all ease-in',\n        '&:hover':{\n            border: '1px solid #00000080',\n            boxShadow: '1px 1px 1px 1px #00000080',\n            color:'#eee',\n            backgroundColor: ' #e27d60',\n        },\n    },\n    menuButtonIcon: {\n        fontSize: '2rem'\n        // left: '50%',\n        // top: '50%',\n        // transform: 'translateX(-50%)',\n        // position: 'relative',\n    },\n    // necessary for content to be below app bar\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    content: {\n        flexGrow: 1,\n    //   padding: theme.spacing(0),\n        color: 'inherit',\n        border: 'none',\n        textDecoration: 'none',\n        '&:hover':{\n            textDecoration: 'none',\n            color: '#000',\n            borderLeft: '2px solid #000'\n        }\n    },\n    siteTitle: {\n        textDecoration:'none',\n        color: 'inherit',\n        '& h2':{\n            fontSize: '2rem',\n            fontWeight: '400',\n            padding: theme.spacing(4),\n            textAlign: 'center'\n        },\n    },\n    drawerDesc:{\n        fontSize: '1rem',\n        padding: theme.spacing(0, 1),\n        textAlign: 'center',\n        marginBottom: theme.spacing(1)\n    },\n    resume:{\n        marginTop: '10%',\n        marginBottom: '2rem',\n        postion: 'relative',\n        left: '50%',\n        transform: 'translateX(-50%)'\n    },\n}));\n\nconst Header = (props) => {\n\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = (event) => {\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n        setOpen(false);\n    };\n\n    const list = (\n        <div\n          className={clsx(classes.drawerPaper)}\n          role=\"presentation\"\n          onClick={handleDrawerOpen}\n          onKeyDown={handleDrawerClose}\n        >\n            <a href=\"/\" className={classes.siteTitle}>\n                <h2>\n                    {portfolio.Greeting.title}\n                </h2>\n            </a>\n            <p style={{}} className={classes.drawerDesc}>{portfolio.Greeting.subTitle}</p>\n            <Divider/>\n            <List>\n                {\n                    [\n                        {\n                            name: 'About',\n                            logo: ['fas', 'user'],\n                            link : '#about'\n                        },\n                        {\n                            name: 'Projects',\n                            logo: ['fas', 'code'],\n                            link : '#projects'\n                        },\n                        {\n                            name: 'Experience',\n                            logo: ['fas', 'laptop-code'],\n                            link : '#experience'\n                        },\n                        {\n                            name: 'Contact',\n                            logo: ['fas', 'headset'],\n                            link : '#contact'\n                        },\n                    ].filter(Boolean).map((text, index) => (\n                        <a href={text.link} className={classes.content}> \n                            <ListItem button key={text}>\n                                <ListItemIcon><FontAwesomeIcon icon={text.logo} /></ListItemIcon>\n                                <ListItemText primary={text.name} />\n                            </ListItem>\n                        </a>\n                    ))\n                }\n            </List>\n            <Divider />\n            <Button \n                variant=\"contained\" \n                color=\"primary\" \n                className={classes.resume} \n                href={portfolio.Greeting.resumeLink} \n                target=\"_blank\">\n                RESUME\n            </Button>\n        </div>\n    );\n\n\n    return(\n        <React.Fragment className=\"header\">\n            \n            <nav>\n                <Tooltip title=\"Menu\" arrow placement=\"right\">\n                    <Button className={classes.fullScreenMenu} onClick={handleDrawerOpen}>\n                        <FontAwesomeIcon className={classes.menuButtonIcon} icon={['fas', 'bars']}/>\n                    </Button>\n                </Tooltip>                        \n                    \n                        \n                <React.Fragment >\n                    <SwipeableDrawer\n                        open={open}\n                        onClose={handleDrawerClose}\n                        className={classes.draer}\n                    >\n                        {list}\n                    </SwipeableDrawer>\n                </React.Fragment>\n                        \n            </nav>\n        </React.Fragment>\n    )\n}\n\nexport default Header;","import React from 'react'\nimport './Landing.css'\nimport {\n    Grid,\n    Tooltip ,\n} from '@material-ui/core';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n    Greeting,\n} from '../../portfolio'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    moreInfo:{\n        border: '1px solid #eee',\n        borderRadius: \"5px\",\n        // boxShadow: '0px 0px 2px 3px #eee',\n        left: '50%',\n        bottom: '5%',\n        transform: 'translateX(-50%)',\n        position: 'absolute',\n        itemAlign: 'center',\n        justifyContent: 'center',\n        color: '#eee',\n        // padding: '12px',\n        display: 'inline-block',\n        transition: '0.2s all ease-in',\n        '&:hover':{\n            border: '1px solid #00000080',\n            boxShadow: '1px 1px 1px 1px #00000080',\n            color:'#eee'\n        },\n        [theme.breakpoints.down('xs')]: {\n            bottom: '3%'\n        }\n    },\n    moreInfoIcon:{\n        fontSize: '3rem',\n        padding: 5\n        // width: '55px',\n        \n    }\n}))\n\nconst LandingPage = () => {\n\n    const classes = useStyles();\n\n    return(\n        <>\n            <div className=\"landing\">\n\n            {/* Content for introduction */}\n            \n            <div className=\"intro-title\">\n                <h1 className=\"title\">{Greeting.title}</h1>\n                \n                <h5>{Greeting.subTitle}</h5>\n                <div className=\"divider\"></div>\n                <div className=\"social-contact\">\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        spacing={0}\n                    >\n                        {\n                            Greeting.socialLink.map(social => (\n                                <Grid items md={3}>\n                                    <Tooltip title={social.tooltip} arrow>\n                                        <a href={social.link} className=\"social-icon\">\n                                        <FontAwesomeIcon icon={social.icon}/>\n                                        </a>\n                                    </Tooltip>\n                                </Grid>\n                            ))\n                        }\n                    </Grid>\n                </div>\n            </div>\n            <a href=\"#about\" className={classes.moreInfo} >\n                <Tooltip title=\"More Info\" arrow>\n                <FontAwesomeIcon icon={[\"fas\", \"chevron-down\"]} className={classes.moreInfoIcon} />\n                </Tooltip>\n            </a>\n            </div>\n            {/* <div className=\"background-icon\">\n                <span><img src=\"/android.svg\" alt=\"\"/></span>\n            </div> */}\n        </>\n    )\n}\n\nexport default LandingPage;","import React from 'react'\nimport './about.css'\nimport {\n    Grid,\n    Card, \n    CardActions,\n    CardContent,\n    CardMedia,\n    CardHeader ,\n    Button,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n    aboutMe,\n    skillSet,\n} from '../../portfolio'\n\nconst useStyles = makeStyles((theme) => ({\n    aboutMe:{\n        alignItems: 'center',\n        minHeight: '100vh',\n        paddingTop: '5%',\n        paddingBottom: '4rem',\n    },\n    content:{\n        marginTop: '3rem',\n        marginBottom: '4rem',\n    },\n    pageTitle:{\n        textAlign: 'center',\n        marginBottom: '1rem',\n        color: '#00000080',\n    },\n    pageHeading:{\n        fontWeight: '300',\n        fontSize: '44px',\n        color: '#000000',\n    },\n    card: {\n        maxWidth: '75%',\n        margin: 'auto',\n        marginTop: '1rem',\n    },\n    heading:{\n        fontWeight: '300',\n        fontSize: '44px',\n        textAlign: 'center',\n    },\n    desc:{\n        fontSize: '1.1rem',\n        fontWeight: '400',\n        color: '#00000080'\n    },\n    skillCard:{\n        \n    },\n    skillCardHeader:{\n        backgroundColor: '#eee'\n    },\n    skill:{\n        border: '1px solid transparent',\n        color: '#00000080',\n        borderRadius: '5px',\n        margin: 'auto',\n        // width: '40%',\n        // justifyContent: 'center',\n        textAlign: 'center',\n        transition: '0.2s all ease-in',\n        '&:hover':{\n            border: '1px solid #000',\n            boxShadow: '1px 1px 1px 1px #00000080'\n        }\n    },\n    skillIcon:{\n        fontSize: '4.5rem',\n        margin: '5px',\n    },\n    skillTitle:{\n        fontSize: '1rem'\n    }\n}))\n\nconst About = () =>{\n\n    const classes = useStyles()\n    return (\n        <>\n            <div className={classes.aboutMe} id=\"about\">\n            <div className={classes.pageTitle}>\n                <h2 className={classes.pageHeading} >About Me</h2>\n                <h5>Some this & That</h5>\n            </div>\n                <div className={classes.content}>\n                    <Grid \n                        container\n                        spacing={0}\n                        direction=\"row\"\n                        justify=\"space-evenly\"\n                        alignItems=\"flex-start\"\n                    >\n                        <Grid items md={6} sm={12}>\n                            <Card variant=\"outlined\" className={[classes.card]}>\n                                <CardMedia\n                                    component='img'\n                                    alt='hasnat amir'\n                                    title='hasnatDev'\n                                    image={aboutMe.image}\n                                />\n                                <CardContent>\n                                    <h3 className={classes.heading}>\n                                        {aboutMe.name}\n                                    </h3>\n                                    <p className={classes.desc}>{aboutMe.desc}</p>\n                                </CardContent>\n                                <CardActions>\n                                    <Button color=\"primary\" variant=\"contained\" href={aboutMe.resumeLink} target=\"_blank\">RESUME</Button>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                        <Grid items md={6} sm={12}>\n                            <Card variant=\"outlined\" className={[classes.card, classes.skillCard]}>\n                                <CardHeader\n                                    title=\"Programming Languages\"\n                                    className={classes.skillCardHeader}\n                                />\n                                <CardContent>\n                                    <Grid \n                                        container\n                                        // spacing={3}\n                                        direction=\"row\"\n                                        justify=\"space-evenly\"\n                                        alignItems=\"flex-start\"\n                                    >\n                                    {\n                                        skillSet.programmingLang.map( (lang, index) => (\n                                            <Grid items md={4} sm={6} className={classes.skill}>\n                                                <FontAwesomeIcon icon={lang.icon} className={classes.skillIcon}/>\n                                                <p className={classes.skillTitle}>{lang.name}</p>\n                                            </Grid>\n                                        ))\n                                    }\n                                    </Grid>\n                                </CardContent>\n                            </Card>\n                            <Card variant=\"outlined\" className={[classes.card, classes.skillCard]}>\n                                <CardHeader\n                                    title=\"Tools & FrameWorks\"\n                                    className={classes.skillCardHeader}\n                                />\n                                <CardContent>\n                                    <Grid \n                                        container\n                                        // spacing={3}\n                                        direction=\"row\"\n                                        justify=\"space-around\"\n                                        alignItems=\"flex-start\"\n                                    >\n                                    {\n                                        skillSet.Tools.map( (tool, index) => (\n                                            <Grid items md={4} sm={6} className={classes.skill}>\n                                                <FontAwesomeIcon icon={tool.icon} className={classes.skillIcon}/>\n                                                <p className={classes.skillTitle}>{tool.name}</p>\n                                            </Grid>\n\n                                        ))\n                                    }\n                                        \n                                    </Grid>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                    </Grid>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default About","import React, { useEffect, useState} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n    Grid,\n    Card,\n    CardHeader,\n    CardActionArea,\n    CardContent,\n    Button,\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport ApolloClient, { gql } from \"apollo-boost\";\nimport { openSource } from '../../portfolio'\n\nconst useStyles = makeStyles((theme) => ({\n    openSource:{\n        alignItems: 'center',\n        minHeight: '100vh',\n        backgroundColor: '#eee',\n        paddingTop: '5%',\n        paddingBottom: '4rem',\n    },\n    openSourceCS:{\n        alignItems: 'center',\n        // minHeight: '100vh',\n        textAlign: 'center',\n        backgroundColor: '#eee',\n        paddingTop: '5%',\n        paddingBottom: '4rem',\n    },\n    pageTitle:{\n        textAlign: 'center',\n        marginBottom: '1rem',\n        color: '#00000080',\n    },\n    pageHeading:{\n        fontWeight: '300',\n        fontSize: '44px',\n        color: '#000000',\n    },\n    repo:{\n        marginTop: '3rem'\n    },\n    card:{\n        border: '1px solid #000',\n        transition: '0.2s all ease-in',\n        boxShadow: '1px 1px 1px 1px #00000080',\n        width: '75%',\n        margin: 'auto',\n        marginBottom:'1rem',\n        '&:hover':{\n            border: '1px solid #00000080',\n            boxShadow: '0px 0px 0px 0px transparent'\n        }\n    },\n    repoTitle:{\n        fontSize: '1.8rem',\n        fontWeight: '400',\n        '&:hover':{\n            color:'#e27d60',\n        }\n    },\n    repoDesc:{\n        fontSize: '1.1rem',\n        fontWeight: '400',\n        paddingBottom: '1rem',\n        color: '#00000080'\n    },\n    repoStats:{\n        display: 'flex',\n        justifyContent: 'space-between',\n        fontSize: '0.9rem',\n        fontWeight: '400',\n        color: '#00000080',\n        '& span':{\n            display: 'flex',\n            marginRight: '0.75rem',\n            alignItems: 'center',\n        }\n    },\n    languageColor: {\n        width: '12px',\n        height: '12px',\n        marginRight: '0.25rem',\n        borderRadius: '50%',\n        backgroundColor: 'blue'\n    },\n    fork:{\n        fontSize: '1.1rem',\n        marginRight: '0.25rem'\n    },\n    moreProject:{\n        margin: '3rem'\n    }\n}))\n\n\nconst OpenSource = () => {\n    const classes = useStyles()\n    const [repo, setrepo] = useState([]);\n\n\n    useEffect(() => {\n        getRepoData();\n      });\n    \n      function getRepoData() {\n        const client = new ApolloClient({\n          uri: \"https://api.github.com/graphql\",\n          request: (operation) => {\n            operation.setContext({\n              headers: {\n                authorization: `Bearer ${openSource.githubToken}`,\n              },\n            });\n          },\n        });\n    \n        client\n          .query({\n            query: gql`\n            {\n            user(login: \"${openSource.githubUserName}\") {\n              pinnedItems(first: 6, types: [REPOSITORY] ) {\n                totalCount\n                edges {\n                    node {\n                      ... on Repository {\n                        name\n                        description\n                        forkCount\n                        stargazers {\n                          totalCount\n                        }\n                        url\n                        id\n                        diskUsage\n                        primaryLanguage {\n                          name\n                          color\n                        }\n                      }\n                    }\n                  }\n              }\n            }\n          }\n            `,\n          })\n          .then((result) => {\n            setrepoFunction(result.data.user.pinnedItems.edges);\n            // console.log(result.data.user.pinnedItems.edges);\n          })\n          .catch(function (error) {\n            console.log(error);\n            setrepoFunction(\"Error\");\n            console.log(\"Because of this Error, nothing is shown in place of Projects section. Projects section not configured\");\n          });\n    }\n\n    const setrepoFunction = (array) => {\n        setrepo(array);\n    }\n    if (!(typeof repo === 'string' || repo instanceof String)){\n    return(\n        <>\n        {\n            openSource.show ? (\n\n\n        <div className={classes.openSource} id=\"openSource\">\n            <div className={classes.pageTitle}>\n                <h2 className={classes.pageHeading} >Open Source Projects</h2>\n                <h5>Go & check it!!</h5>\n            </div>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"stretch\"\n                className={classes.repo}\n            >\n            {\n                repo.map(rep => (\n                    <Grid items md={6} sm={12}>\n                    <Card className={classes.card} variant=\"outlined\" key={rep.node.id}>\n                        <CardActionArea href={rep.node.url} target=\"_blank\">\n\n                            <CardHeader\n                                avatar={<FontAwesomeIcon icon={['fas', 'book']} />}\n                                title={<h3 className={classes.repoTitle}>{rep.node.name}</h3>}\n                            />\n                            <CardContent >\n                            <p className={classes.repoDesc}>\n                                {rep.node.description}\n                            </p>\n                            <div className={classes.repoStats}>\n                                <span>\n                                    <div className={classes.languageColor} style={{ backgroundColor: rep.node.primaryLanguage.color}}></div>\n                                    <p>{rep.node.primaryLanguage.name}</p>\n                                </span>\n                                <span>\n                                    <FontAwesomeIcon className={classes.fork} icon={['fas', 'code-branch']}/>\n                                    <p>{rep.node.forkCount}</p>\n                                </span>\n                                <span>\n                                    <FontAwesomeIcon className={classes.fork} icon={['fas', 'star']}/>\n                                    <p>{rep.node.stargazers.totalCount}</p>\n                                </span>\n                                <span>\n                                    <FontAwesomeIcon className={classes.fork} icon={['fas', 'database']}/>\n                                    <p>{rep.node.diskUsage} KB</p>\n                                </span>\n                            </div>\n                            </CardContent>\n                        </CardActionArea>\n                    </Card>\n                </Grid>\n                ))\n                \n            }\n                <Grid items>\n                    <Button \n                        variant=\"contained\" \n                        color=\"primary\" \n                        size=\"large\" \n                        href=\"https://github.com/hasnatamir2\"\n                        target=\"_blank\"\n                        className={classes.moreProject}\n                    >\n                        More Projects\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        ): null\n        }\n        </>\n    )\n    }else{\n        return(\n            <div className={classes.openSourceCS}>\n                <div className={classes.pageTitle}>\n                    Github repo Coming soon...(loading)\n                </div>\n                <Button \n                        variant=\"contained\" \n                        color=\"primary\" \n                        size=\"large\" \n                        href=\"https://github.com/hasnatamir2\"\n                        target=\"_blank\"\n                        className={classes.moreProject}\n                    >\n                        Visit to My Github\n                </Button>\n            </div>\n        );\n      }\n}\n\nexport default OpenSource;","import React from 'react'\nimport {\n    Grid,\n    Card,\n    CardActions,\n    CardContent,\n    CardMedia,\n    Button,\n    Chip,\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { projects} from '../../portfolio'\n\nconst useStyles = makeStyles((theme) => ({\n    projects:{\n        alignItems: 'center',\n        minHeight: '100vh',\n        backgroundColor: '#fff',\n        paddingTop: '5%',\n        paddingBottom: '4rem',\n    },\n    pageTitle:{\n        textAlign: 'center',\n        marginBottom: '1rem',\n        color: '#00000080',\n    },\n    pageHeading:{\n        fontWeight: '300',\n        fontSize: '44px',\n        color: '#000000',\n    },\n    card:{\n        maxWidth: '75%',\n        margin: 'auto',\n        marginBottom: '2rem',\n        marginTop: '2rem',\n        transition: '0.2s all ease-in',\n        '&:hover':{\n            border: '1px solid #000000',\n            boxShadow: '1px 1px 1px 1px #00000080'\n        },\n    },\n    cardMedia:{\n        height: '15rem',\n        \n    },\n    chip:{\n        margin: theme.spacing(1),\n        marginLeft: 0\n    },\n    cardTitle:{\n        fontWeight: '300',\n        color: '#000',\n        fontSize: '34px',\n        marginBottom: '1rem',\n    },\n    cardDesc: {\n        fontSize: '1rem',\n        fontWeight: '400',\n        paddingBottom: '1rem',\n        color: '#00000080'\n    }\n}))\n\nconst Projects = () => {\n\n    const classes = useStyles()\n    return(\n        <div className={classes.projects} id=\"projects\">\n            <div className={classes.pageTitle}>\n                <h2 className={classes.pageHeading} >{projects.title}</h2>\n                <h5>{projects.subtitle}</h5>\n            </div>\n            <Grid \n                container\n                direction=\"row\"\n                justify=\"space-evenly\"\n                alignItems=\"flex-start\"\n            >\n            {\n                projects.projects.map( project => \n                (\n                    <Grid items md={4} sm={6}>\n                        <Card className={classes.card} variant=\"outlined\">\n                        <CardMedia\n                        className={classes.cardMedia}\n                        component='img'\n                        image={project.image}\n                        title={project.title}\n                        />\n                        <CardContent>\n                        <h3 className={classes.cardTitle}>\n                            {project.title}\n                        </h3>\n                        <p className={classes.cardDesc}>\n                            {project.desc}\n                        </p>\n                        {\n                            project.tools.map(tool => (\n                                <Chip label={tool} className={classes.chip} />\n                            ))\n                        }\n                                                \n                        </CardContent>\n                        <CardActions>\n                            <Button size=\"small\" color=\"primary\" href={project.link} variant=\"contained\">\n                                Go Check it out\n                            </Button>\n                        </CardActions>\n                        </Card>\n\n                    </Grid>\n                ))\n            }\n                \n            </Grid>\n        </div>\n    )\n}\n\nexport default Projects","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Grid,\n    Card, \n    CardActionArea,\n    CardContent,\n} from '@material-ui/core'\nimport {blogs} from '../../portfolio'\n\nconst useStyles = makeStyles( theme => ({\n    blogs:{\n        backgroundColor: '#eeeeee50',\n        alignItems: 'center',\n        minHeight: '100vh',\n        paddingTop: '5%',\n        paddingBottom: '4rem',\n    },\n    pageTitle:{\n        textAlign: 'center',\n        marginBottom: '1rem',\n        color: '#00000080',\n    },\n    pageHeading:{\n        fontWeight: '300',\n        fontSize: '44px',\n        color: '#000000',\n    },\n    blogPost:{\n        border: '1px solid #85dcb050',\n        transition: '0.2s all ease-in',\n        width: '75%',\n        margin: 'auto',\n        marginTop: '1rem',\n        '&:hover':{\n            border: '1px solid #85dcb0',\n            boxShadow: '1px 1px 1px 1px #85dcb0'\n        }\n    },\n    blogTitle:{\n        fontWeight: '300',\n        color: '#000',\n        fontSize: '34px',\n        marginBottom: '1rem',\n    },\n    blogSummary:{\n        fontSize: '1.1rem',\n        fontWeight: '400',\n        paddingBottom: '1rem',\n        color: '#00000080'\n    },\n    linkIcon:{\n        fontSize: '1rem',\n        fontWeight: '400',\n        color: '#00000080',\n    }\n}))\n\nconst Blogs = () => {\n\n    const classes = useStyles()\n    return(\n        <>\n        {\n            blogs.show ? (\n\n        <div className={classes.blogs} id=\"blogs\">\n            <div className={classes.pageTitle}>\n                <h2 className={classes.pageHeading} >{blogs.title}</h2>\n                <h5>{blogs.subtitle}</h5>\n            </div>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"space-evenly\"\n                alignItems=\"flex-start\"\n            >\n            {\n                blogs.blogs.map( blog => (\n\n                    <Grid items md={6} sm={12}>\n                        <Card className={classes.blogPost} variant=\"outlined\">\n                            <CardActionArea href={blog.link} target=\"_blank\">\n                                <CardContent>\n                                    <h2 className={classes.blogTitle}>\n                                        {blog.title}\n                                        <FontAwesomeIcon className={classes.linkIcon} icon={['fas', 'external-link-alt']} />\n                                    </h2>\n                                    <h5 className={classes.blogSummary}>{blog.desc}</h5>\n                                </CardContent>\n                            </CardActionArea>\n                        </Card>\n                    </Grid>\n                ))\n            }                \n            </Grid>\n        </div>\n        ): null\n\n        }\n        </>\n    )\n}\n\nexport default Blogs;","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { VerticalTimeline, VerticalTimelineElement }  from 'react-vertical-timeline-component';\nimport 'react-vertical-timeline-component/style.min.css';\nimport {experience} from '../../portfolio'\n\nconst useStyles = makeStyles((theme) => ({\n    experience:{\n        backgroundColor: '#eee',\n        alignItems: 'center',\n        minHeight: '100vh',\n        paddingTop: '5%',\n        paddingBottom: '4rem',\n    },\n    pageTitle:{\n        textAlign: 'center',\n        marginBottom: '1rem',\n        color: '#00000080',\n    },\n    pageHeading:{\n        fontWeight: '300',\n        fontSize: '44px',\n        color: '#000000',\n    },\n    timeLine:{\n        \n    },\n    timeLineElement:{\n        border: '1px solid #eee',\n        marginTop: '2rem',\n    },\n    elementTitle:{\n        fontWeight: '300',\n        fontSize: '34px',\n    },\n    elementCompany:{\n        fontSize: '24px',\n        fontWeight: '400',\n    },\n    elementContent:{\n        fontSize: '1.1rem',\n        fontWeight: '400',\n        paddingBottom: '1rem',\n        color: '#00000080'\n    },\n}))\n\n\nconst Experience = () => {\n    const classes = useStyles()\n  \n    return (\n        <div className={classes.experience} id=\"experience\">\n            <div className={classes.pageTitle}>\n                <h2 className={classes.pageHeading} >{experience.title}</h2>\n                <h5>{experience.subtitle}</h5>\n            </div>\n            <VerticalTimeline\n                className={classes.timeLine}\n                // layout=\"1-column\"\n            >\n            {\n                experience.experience.map((step, index) => (\n                    <VerticalTimelineElement\n                        className=\"vertical-timeline-element--work\"\n                        date={step.time}\n                        contentStyle={\n                            (step.catagory === 'work') ? \n                            (\n                                {\n                                    border: '1px solid #7cc3b4', \n                                    'border-top': '5px solid #7cc3b4'\n                                }\n                            ): (\n                                {\n                                    border: '1px solid #e27d60', \n                                    'border-top': '5px solid #e27d60'\n                                }\n                            )\n                                }\n                        iconStyle={(step.catagory === 'work') ? ({ background: '#7cc3b4', color: '#fff' }):({ background: '#e27d60', color: '#fff' })}\n                        icon={(step.catagory === 'work') ? (<FontAwesomeIcon icon={['fas', 'laptop-code']} />): <FontAwesomeIcon icon={['fas', 'graduation-cap']} />}\n                    >\n                        <h3 className={classes.elementTitle}>{step.title}</h3>\n                        <h4 className={classes.elementCompany}>{step.company}</h4>\n                        <p className={classes.elementContent}>\n                        {step.achievment}\n                        </p>\n                    </VerticalTimelineElement>\n                ))\n            }\n            <VerticalTimelineElement\n            iconStyle={{background: '#e27d60', color: '#fff'}}\n                icon={<FontAwesomeIcon icon={['fas', 'star']}/>}\n            />\n            </VerticalTimeline>\n        </div>\n    );\n}\n\nexport default Experience;","import React from 'react'\nimport './contact.css'\nimport {\n    Grid,\n    Tooltip ,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { contact, socialLink } from '../../portfolio'\n\nconst useStyles = makeStyles((theme) => ({\n    contact:{\n        // backgroundColor: '#eeeeee50',\n        alignItems: 'center',\n        minHeight: '100vh',\n        padding: 'auto',\n        paddingTop: '5%',\n        paddingBottom: '4rem',\n    },\n    pageTitle:{\n        textAlign: 'center',\n        marginBottom: '1rem',\n        color: '#00000080',\n    },\n    pageHeading:{\n        fontWeight: '300',\n        fontSize: '44px',\n        color: '#000000',\n    },\n    content:{\n        fontSize: '1.5rem',\n        marginLeft: '2rem',\n        fontWeight: '300',\n        marginTop: '1rem',\n        textAlign: 'center',\n    },\n    contactContainer:{\n        textAlign: 'center',\n    },\n    contactCard:{\n        padding: '15px',\n        textAlign: 'center',\n        fontSize: '1.5rem',\n        borderRadius: '5px',\n        margin: '1rem',\n        marginTop: '2rem',\n        textDecoration: 'none',\n        display: 'inline-block',\n        border: '1px solid #eee',\n        transition: '0.2s all ease-in',\n        '&:hover':{\n            border: '1px solid #000',\n            boxShadow: '1px 1px 1px 1px #00000080'\n        }\n    },\n}))\n\nconst Contact = () => {\n    const classes = useStyles()\n    return(\n        <div className={classes.contact} id=\"contact\">\n            <div className={classes.pageTitle}>\n                <h2 className={classes.pageHeading} >{contact.title}</h2>\n                <h5>{contact.subtitle}</h5>\n            </div>\n            <Grid \n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"flex-start\"\n            >\n                <Grid items md={12} sm={12}>\n                {\n                    contact.message.map( msg => (\n                        <p className={classes.content}><FontAwesomeIcon icon={msg.icon} /> {msg.msg}</p>\n                    ))\n                }\n                </Grid>\n                    {\n                        socialLink.map( social => (\n                            <Grid items md sm={4}>\n                                <div className={classes.contactContainer}>\n                                    <Tooltip title={social.tooltip} arrow>\n                                        <a href={social.link} style={{background: `${social.bgColor}`}} className={classes.contactCard}>    \n                                            <FontAwesomeIcon icon={social.icon} color=\"#fff\" />\n                                        </a>\n                                    </Tooltip>\n                                </div>\n                            </Grid>\n                        ))\n                    }\n            </Grid>\n        </div>\n    )\n}\n\nexport default Contact;","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport './Footer.css'\n\nconst Footer = () => {\n    return(\n        <div className=\"footer\">\n            <p>Made with <FontAwesomeIcon style={{'color':'red'}} icon={['fas', 'heart']}/> by Hasnat Amir </p>\n        </div>\n    )\n}\n\nexport default Footer;","import React from 'react'\n\nimport Header from './Header'\nimport LandingPage from './LandingPage'\nimport About from './AboutMe'\nimport OpenSource from './OpenSourceProjects'\nimport Projects from './Projects'\nimport Blogs from './Blogs'\nimport Experience from './Experience'\nimport Contact from './Contact'\nimport Footer from './Footer'\n\n\nconst Main = () => {\n    return(\n        <>\n            <Header/>\n            <LandingPage/>\n            <About/>\n            <OpenSource/>\n            <Projects/>\n            <Blogs/>\n            <Experience/>\n            <Contact/>\n            <Footer/>\n        </>\n    )\n}\n\nexport default Main;","import React from 'react';\nimport './App.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { fas } from \"@fortawesome/free-solid-svg-icons\"\n\nimport Main from './Container'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {library.add(fab, fas)}\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    {console.log(process.env)}\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/hasnatAmir.e5aa1248.JPG\";","module.exports = __webpack_public_path__ + \"static/media/home_create.d20bc7d3.png\";","module.exports = __webpack_public_path__ + \"static/media/Ivestogenie-GIF-final.b2ab28e6.gif\";"],"sourceRoot":""}